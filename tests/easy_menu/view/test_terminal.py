# -*- coding: utf-8 -*-
from __future__ import division, print_function, absolute_import, unicode_literals

from easy_menu.view import Terminal
from easy_menu.controller import CommandExecutor
from tests.easy_menu.logger.mock_logger import MockLogger
from tests.easy_menu.util.universal_import import unittest, StringIO


class TestTerminal(unittest.TestCase):
    def get_exec(self):
        return CommandExecutor(MockLogger())

    def test_init(self):
        t = Terminal({'': []}, 'host', 'user', self.get_exec())
        self.assertEqual(t.root_menu, {'': []})
        self.assertEqual(t.host, 'host')
        self.assertEqual(t.user, 'user')

    def test_init_with_output_encoding(self):
        out = StringIO()
        out.encoding = 'sjis'
        t = Terminal({'': []}, 'host', 'user', self.get_exec(), _output=out)
        self.assertEqual(t.encoding, 'sjis')

        t = Terminal({'': []}, 'host', 'user', self.get_exec(), _output=out, encoding='utf-8')
        self.assertEqual(t.encoding, 'utf-8')

    def test_init_error(self):
        self.assertRaises(AssertionError, lambda: Terminal({'': []}, 'host', 'user', self.get_exec(), 0))
        self.assertRaises(AssertionError, lambda: Terminal({'': []}, 'host', 'user', self.get_exec(), -1))
        self.assertRaises(AssertionError, lambda: Terminal({'': []}, 'host', 'user', self.get_exec(), page_size=0))
        self.assertRaises(AssertionError, lambda: Terminal({'': []}, 'host', 'user', self.get_exec(), page_size=-1))
        self.assertRaises(AssertionError, lambda: Terminal({'': []}, 'host', 'user', self.get_exec(), page_size=10))

    def test_get_page(self):
        self.maxDiff = None

        t = Terminal({'': []}, 'host', 'user', self.get_exec(), encoding='utf-8', lang='C')
        self.assertEqual(t.get_page('title', [], None, 0, 1), '\n'.join([
            'Host: host                                                            User: user',
            '================================================================================',
            '  title',
            '--------------------------------------------------------------------------------',
            '------+-------------------------------------------------------------------------',
            '  [0] | Quit',
            '================================================================================',
            'Press menu number (0-0): '
        ]))

        self.assertEqual(t.get_page('title', [
            {'menu a': 'command a'},
            {'menu b': 'command b'},
            {'menu c': 'command c'},
        ], 'Main Menu', 0, 1), '\n'.join([
            'Host: host                                                            User: user',
            '================================================================================',
            '  title',
            '--------------------------------------------------------------------------------',
            '  [1] | menu a',
            '  [2] | menu b',
            '  [3] | menu c',
            '------+-------------------------------------------------------------------------',
            '  [0] | Return to Main Menu',
            '================================================================================',
            'Press menu number (0-3): '
        ]))

        self.assertEqual(t.get_page('title', [
            {'menu a': 'command a'},
            {'menu b': 'command b'},
            {'menu c': 'command c'},
            {'menu d': 'command d'},
            {'menu e': 'command e'},
            {'menu f': 'command f'},
            {'menu g': 'command g'},
            {'menu h': 'command h'},
            {'menu i': 'command i'},
        ], None, 0, 100), '\n'.join([
            'Host: host                                                            User: user',
            '================================================================================',
            '  title',
            '--------------------------------------------------------------------------------',
            '                                  Page 1 / 100                            [N] =>',
            '--------------------------------------------------------------------------------',
            '  [1] | menu a',
            '  [2] | menu b',
            '  [3] | menu c',
            '  [4] | menu d',
            '  [5] | menu e',
            '  [6] | menu f',
            '  [7] | menu g',
            '  [8] | menu h',
            '  [9] | menu i',
            '------+-------------------------------------------------------------------------',
            '  [0] | Quit',
            '================================================================================',
            'Press menu number (0-9): '
        ]))

        self.assertEqual(t.get_page('title', [
            {'menu a': 'command a'},
            {'menu b': 'command b'},
            {'menu c': 'command c'},
            {'menu d': 'command d'},
            {'menu e': 'command e'},
            {'menu f': 'command f'},
            {'menu g': 'command g'},
            {'menu h': 'command h'},
            {'menu i': 'command i'},
        ], None, 8, 100), '\n'.join([
            'Host: host                                                            User: user',
            '================================================================================',
            '  title',
            '--------------------------------------------------------------------------------',
            '<= [P]                            Page 9 / 100                            [N] =>',
            '--------------------------------------------------------------------------------',
            '  [1] | menu a',
            '  [2] | menu b',
            '  [3] | menu c',
            '  [4] | menu d',
            '  [5] | menu e',
            '  [6] | menu f',
            '  [7] | menu g',
            '  [8] | menu h',
            '  [9] | menu i',
            '------+-------------------------------------------------------------------------',
            '  [0] | Quit',
            '================================================================================',
            'Press menu number (0-9): '
        ]))

        self.assertEqual(t.get_page('title', [
            {'menu a': 'command a'},
        ], None, 99, 100), '\n'.join([
            'Host: host                                                            User: user',
            '================================================================================',
            '  title',
            '--------------------------------------------------------------------------------',
            '<= [P]                           Page 100 / 100                                 ',
            '--------------------------------------------------------------------------------',
            '  [1] | menu a',
            '------+-------------------------------------------------------------------------',
            '  [0] | Quit',
            '================================================================================',
            'Press menu number (0-1): '
        ]))

    def test_get_page_ja(self):
        self.maxDiff = None

        t = Terminal({'': []}, 'ホスト', 'ユーザ', self.get_exec(), encoding='utf-8', lang='ja_JP')
        self.assertEqual(t.get_page('タイトル', [], None, 0, 1), '\n'.join([
            'ホスト名: ホスト                                              実行ユーザ: ユーザ',
            '================================================================================',
            '  タイトル',
            '--------------------------------------------------------------------------------',
            '------+-------------------------------------------------------------------------',
            '  [0] | 終了',
            '================================================================================',
            '番号を入力してください (0-0): '
        ]))

        self.assertEqual(t.get_page('タイトル', [
            {'メニュー a': 'コマンド a'},
            {'メニュー b': 'コマンド b'},
            {'メニュー c': 'コマンド c'},
        ], 'メインメニュー', 0, 1), '\n'.join([
            'ホスト名: ホスト                                              実行ユーザ: ユーザ',
            '================================================================================',
            '  タイトル',
            '--------------------------------------------------------------------------------',
            '  [1] | メニュー a',
            '  [2] | メニュー b',
            '  [3] | メニュー c',
            '------+-------------------------------------------------------------------------',
            '  [0] | メインメニュー に戻る',
            '================================================================================',
            '番号を入力してください (0-3): '
        ]))

        self.assertEqual(t.get_page('タイトル', [
            {'メニュー a': 'コマンド a'},
            {'メニュー b': 'コマンド b'},
            {'メニュー c': 'コマンド c'},
            {'メニュー d': 'コマンド d'},
            {'メニュー e': 'コマンド e'},
            {'メニュー f': 'コマンド f'},
            {'メニュー g': 'コマンド g'},
            {'メニュー h': 'コマンド h'},
            {'メニュー i': 'コマンド i'},
        ], None, 0, 100), '\n'.join([
            'ホスト名: ホスト                                              実行ユーザ: ユーザ',
            '================================================================================',
            '  タイトル',
            '--------------------------------------------------------------------------------',
            '                                  Page 1 / 100                            [N] =>',
            '--------------------------------------------------------------------------------',
            '  [1] | メニュー a',
            '  [2] | メニュー b',
            '  [3] | メニュー c',
            '  [4] | メニュー d',
            '  [5] | メニュー e',
            '  [6] | メニュー f',
            '  [7] | メニュー g',
            '  [8] | メニュー h',
            '  [9] | メニュー i',
            '------+-------------------------------------------------------------------------',
            '  [0] | 終了',
            '================================================================================',
            '番号を入力してください (0-9): '
        ]))

        self.assertEqual(t.get_page('タイトル', [
            {'メニュー a': 'コマンド a'},
            {'メニュー b': 'コマンド b'},
            {'メニュー c': 'コマンド c'},
            {'メニュー d': 'コマンド d'},
            {'メニュー e': 'コマンド e'},
            {'メニュー f': 'コマンド f'},
            {'メニュー g': 'コマンド g'},
            {'メニュー h': 'コマンド h'},
            {'メニュー i': 'コマンド i'},
        ], None, 8, 100), '\n'.join([
            'ホスト名: ホスト                                              実行ユーザ: ユーザ',
            '================================================================================',
            '  タイトル',
            '--------------------------------------------------------------------------------',
            '<= [P]                            Page 9 / 100                            [N] =>',
            '--------------------------------------------------------------------------------',
            '  [1] | メニュー a',
            '  [2] | メニュー b',
            '  [3] | メニュー c',
            '  [4] | メニュー d',
            '  [5] | メニュー e',
            '  [6] | メニュー f',
            '  [7] | メニュー g',
            '  [8] | メニュー h',
            '  [9] | メニュー i',
            '------+-------------------------------------------------------------------------',
            '  [0] | 終了',
            '================================================================================',
            '番号を入力してください (0-9): '
        ]))

        self.assertEqual(t.get_page('タイトル', [
            {'メニュー a': 'コマンド a'},
        ], None, 99, 100), '\n'.join([
            'ホスト名: ホスト                                              実行ユーザ: ユーザ',
            '================================================================================',
            '  タイトル',
            '--------------------------------------------------------------------------------',
            '<= [P]                           Page 100 / 100                                 ',
            '--------------------------------------------------------------------------------',
            '  [1] | メニュー a',
            '------+-------------------------------------------------------------------------',
            '  [0] | 終了',
            '================================================================================',
            '番号を入力してください (0-1): '
        ]))
